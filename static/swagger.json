{
  "openapi": "3.0.3",
  "info": {
    "title": "API de Usuário com Flask",
    "description": "Essa API foi desenvolvida como projeto de estudo na disciplina de Banco de Dados I, ofertada pelo Departamento de Computação na Universidade Federal de Sergipe, ministrada pelo Professor Andre Britto de Carvalho. Foi desenvolvido apenas uma classe de Usuário para servir de modelo nas persistências com o SGBD PostgreSQL. Foram criadas rotas simples de CRUD, permitindo inserir, alterar, deletar e consultar um usuário.\n\nPara realizar as operações de inserir, alterar e deletar registros, é necessário se autenticar, através do usuário: professor e senha: professor. \n\nLinks úteis:\n- [Repositório da API](https://github.com/isackaik/Python_Flask.git)\n- [LinkedIn](https://www.linkedin.com/in/isackaik/)",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "isackaik1@gmail.com"
    },
    "license": {
      "name": "MIT License",
      "url": "https://github.com/isackaik/Python_Flask/blob/main/LICENSE.txt"
    },
    "version": "1.0.11"
  },
  "servers": [
    {
      "url": "http://127.0.0.1:5000/"
    }
  ],
  "tags": [
    {
      "name": "Usuario",
      "description": "Operações sobre o usuário"
    }
  ],
  "paths": {
    "/usuario": {
      "post": {
        "tags": [
          "Usuario"
        ],
        "summary": "Cadastro de usuário",
        "description": "Cadastrar um novo usuário no banco de dados.",
        "operationId": "createUser",
        "requestBody": {
          "description": "Cadastra um novo usuário.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Usuario"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Usuario"
                }
              }
            }
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/usuario/{cpf}": {
      "get": {
        "tags": [
          "Usuario"
        ],
        "summary": "Consulta de usuário através do CPF",
        "description": "Consultar um usuário existente no banco de dados.",
        "operationId": "selectUserByCPF",
        "parameters": [
          {
            "name": "cpf",
            "in": "path",
            "description": "O CPF será usado na busca pelo Usuário",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Usuario"
                }
              }
            }
          },
          "405": {
            "description": "Invalid input"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Usuario"
        ],
        "summary": "Exclusão de usuário através do CPF",
        "description": "Excluir um usuário existente no banco de dados.",
        "operationId": "deleteUserByCPF",
        "parameters": [
          {
            "name": "cpf",
            "in": "path",
            "description": "O CPF será usado na busca e exclusão do Usuário",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid cpf supplied"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "put": {
        "tags": [
          "Usuario"
        ],
        "summary": "Alteração de Usuário",
        "description": "Alterar o nome ou data de nascimento de um usuário.",
        "operationId": "updateUser",
        "parameters": [
          {
            "name": "cpf",
            "in": "path",
            "description": "CPF que será usado no filtro do comando de alteração do usuário.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "description": "Altere as informações de um usuário.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Usuario"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "404":{
            "description": "User not found"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Usuario": {
        "required": [
          "cpf",
          "nome"
        ],
        "type": "object",
        "properties": {
          "cpf": {
            "type": "string",
            "example": "12345678900"
          },
          "nome": {
            "type": "string",
            "example": "Isac Kaik"
          },
          "data_nascimento": {
            "type": "string",
            "format": "date-time",
            "example": "2000-05-26"
          }
        },
        "xml": {
          "name": "Usuario"
        }
      }
    },
    "requestBodies": {
      "Pet": {
        "description": "Corpo da requisição necessária para criar um usuário",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Usuario"
            }
          }
        }
      }
    }
  }
}